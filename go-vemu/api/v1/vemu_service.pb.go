// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: go-vemu/api/v1/vemu_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通用成功 / 失败
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ② ─ 固件 / 数据
type LoadFirmwareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HexText []byte `protobuf:"bytes,1,opt,name=hex_text,json=hexText,proto3" json:"hex_text,omitempty"`
}

func (x *LoadFirmwareRequest) Reset() {
	*x = LoadFirmwareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadFirmwareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadFirmwareRequest) ProtoMessage() {}

func (x *LoadFirmwareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadFirmwareRequest.ProtoReflect.Descriptor instead.
func (*LoadFirmwareRequest) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{1}
}

func (x *LoadFirmwareRequest) GetHexText() []byte {
	if x != nil {
		return x.HexText
	}
	return nil
}

type LoadBinaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr uint32 `protobuf:"varint,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *LoadBinaryRequest) Reset() {
	*x = LoadBinaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadBinaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBinaryRequest) ProtoMessage() {}

func (x *LoadBinaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBinaryRequest.ProtoReflect.Descriptor instead.
func (*LoadBinaryRequest) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{2}
}

func (x *LoadBinaryRequest) GetAddr() uint32 {
	if x != nil {
		return x.Addr
	}
	return 0
}

func (x *LoadBinaryRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// ③ ─ 运行控制
type StepRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cycles uint64 `protobuf:"varint,1,opt,name=cycles,proto3" json:"cycles,omitempty"`
}

func (x *StepRequest) Reset() {
	*x = StepRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepRequest) ProtoMessage() {}

func (x *StepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepRequest.ProtoReflect.Descriptor instead.
func (*StepRequest) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{3}
}

func (x *StepRequest) GetCycles() uint64 {
	if x != nil {
		return x.Cycles
	}
	return 0
}

type StepResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CyclesExecuted uint64 `protobuf:"varint,1,opt,name=cycles_executed,json=cyclesExecuted,proto3" json:"cycles_executed,omitempty"`
}

func (x *StepResponse) Reset() {
	*x = StepResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StepResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepResponse) ProtoMessage() {}

func (x *StepResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepResponse.ProtoReflect.Descriptor instead.
func (*StepResponse) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{4}
}

func (x *StepResponse) GetCyclesExecuted() uint64 {
	if x != nil {
		return x.CyclesExecuted
	}
	return 0
}

type RunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxCycles uint64 `protobuf:"varint,1,opt,name=max_cycles,json=maxCycles,proto3" json:"max_cycles,omitempty"`
}

func (x *RunRequest) Reset() {
	*x = RunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunRequest) ProtoMessage() {}

func (x *RunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunRequest.ProtoReflect.Descriptor instead.
func (*RunRequest) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{5}
}

func (x *RunRequest) GetMaxCycles() uint64 {
	if x != nil {
		return x.MaxCycles
	}
	return 0
}

type RunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CyclesExecuted uint64 `protobuf:"varint,1,opt,name=cycles_executed,json=cyclesExecuted,proto3" json:"cycles_executed,omitempty"`
	Reason         uint32 `protobuf:"varint,2,opt,name=reason,proto3" json:"reason,omitempty"` // Corresponds to the StopReason enum in the core
	// Deprecated: Do not use.
	Ebreak bool `protobuf:"varint,3,opt,name=ebreak,proto3" json:"ebreak,omitempty"`
}

func (x *RunResponse) Reset() {
	*x = RunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResponse) ProtoMessage() {}

func (x *RunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResponse.ProtoReflect.Descriptor instead.
func (*RunResponse) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{6}
}

func (x *RunResponse) GetCyclesExecuted() uint64 {
	if x != nil {
		return x.CyclesExecuted
	}
	return 0
}

func (x *RunResponse) GetReason() uint32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

// Deprecated: Do not use.
func (x *RunResponse) GetEbreak() bool {
	if x != nil {
		return x.Ebreak
	}
	return false
}

// ④ ─ 存储访问
type ReadMemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr   uint32 `protobuf:"varint,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Length uint32 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *ReadMemRequest) Reset() {
	*x = ReadMemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMemRequest) ProtoMessage() {}

func (x *ReadMemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMemRequest.ProtoReflect.Descriptor instead.
func (*ReadMemRequest) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{7}
}

func (x *ReadMemRequest) GetAddr() uint32 {
	if x != nil {
		return x.Addr
	}
	return 0
}

func (x *ReadMemRequest) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type ReadMemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReadMemResponse) Reset() {
	*x = ReadMemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMemResponse) ProtoMessage() {}

func (x *ReadMemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMemResponse.ProtoReflect.Descriptor instead.
func (*ReadMemResponse) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{8}
}

func (x *ReadMemResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type WriteMemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr uint32 `protobuf:"varint,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WriteMemRequest) Reset() {
	*x = WriteMemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteMemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteMemRequest) ProtoMessage() {}

func (x *WriteMemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteMemRequest.ProtoReflect.Descriptor instead.
func (*WriteMemRequest) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{9}
}

func (x *WriteMemRequest) GetAddr() uint32 {
	if x != nil {
		return x.Addr
	}
	return 0
}

func (x *WriteMemRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Venus DSPM（ROW 视图）
type ReadVectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row   uint32 `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Elems uint32 `protobuf:"varint,2,opt,name=elems,proto3" json:"elems,omitempty"`
}

func (x *ReadVectorRequest) Reset() {
	*x = ReadVectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadVectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadVectorRequest) ProtoMessage() {}

func (x *ReadVectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadVectorRequest.ProtoReflect.Descriptor instead.
func (*ReadVectorRequest) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{10}
}

func (x *ReadVectorRequest) GetRow() uint32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *ReadVectorRequest) GetElems() uint32 {
	if x != nil {
		return x.Elems
	}
	return 0
}

type ReadVectorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []uint32 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *ReadVectorResponse) Reset() {
	*x = ReadVectorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadVectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadVectorResponse) ProtoMessage() {}

func (x *ReadVectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadVectorResponse.ProtoReflect.Descriptor instead.
func (*ReadVectorResponse) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{11}
}

func (x *ReadVectorResponse) GetValues() []uint32 {
	if x != nil {
		return x.Values
	}
	return nil
}

type WriteVectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row    uint32   `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Values []uint32 `protobuf:"varint,2,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *WriteVectorRequest) Reset() {
	*x = WriteVectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteVectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteVectorRequest) ProtoMessage() {}

func (x *WriteVectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteVectorRequest.ProtoReflect.Descriptor instead.
func (*WriteVectorRequest) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{12}
}

func (x *WriteVectorRequest) GetRow() uint32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *WriteVectorRequest) GetValues() []uint32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// ⑤ ─ CPU / CSR
type RegisterFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regs []uint32 `protobuf:"varint,1,rep,packed,name=regs,proto3" json:"regs,omitempty"`
	Pc   uint32   `protobuf:"varint,2,opt,name=pc,proto3" json:"pc,omitempty"`
}

func (x *RegisterFile) Reset() {
	*x = RegisterFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterFile) ProtoMessage() {}

func (x *RegisterFile) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterFile.ProtoReflect.Descriptor instead.
func (*RegisterFile) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{13}
}

func (x *RegisterFile) GetRegs() []uint32 {
	if x != nil {
		return x.Regs
	}
	return nil
}

func (x *RegisterFile) GetPc() uint32 {
	if x != nil {
		return x.Pc
	}
	return 0
}

type SetRegRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetRegRequest) Reset() {
	*x = SetRegRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRegRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRegRequest) ProtoMessage() {}

func (x *SetRegRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRegRequest.ProtoReflect.Descriptor instead.
func (*SetRegRequest) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{14}
}

func (x *SetRegRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SetRegRequest) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type GetCsrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCsrRequest) Reset() {
	*x = GetCsrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCsrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCsrRequest) ProtoMessage() {}

func (x *GetCsrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCsrRequest.ProtoReflect.Descriptor instead.
func (*GetCsrRequest) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetCsrRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCsrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetCsrResponse) Reset() {
	*x = GetCsrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCsrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCsrResponse) ProtoMessage() {}

func (x *GetCsrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCsrResponse.ProtoReflect.Descriptor instead.
func (*GetCsrResponse) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetCsrResponse) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SetCsrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetCsrRequest) Reset() {
	*x = SetCsrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCsrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCsrRequest) ProtoMessage() {}

func (x *SetCsrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCsrRequest.ProtoReflect.Descriptor instead.
func (*SetCsrRequest) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{17}
}

func (x *SetCsrRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetCsrRequest) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 新增 CPU 状态整体视图 (给 QueryState 返回)
type CpuState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regs  []uint32 `protobuf:"varint,1,rep,packed,name=regs,proto3" json:"regs,omitempty"`
	Pc    uint32   `protobuf:"varint,2,opt,name=pc,proto3" json:"pc,omitempty"`
	Cycle uint64   `protobuf:"varint,3,opt,name=cycle,proto3" json:"cycle,omitempty"`
}

func (x *CpuState) Reset() {
	*x = CpuState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CpuState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuState) ProtoMessage() {}

func (x *CpuState) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuState.ProtoReflect.Descriptor instead.
func (*CpuState) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{18}
}

func (x *CpuState) GetRegs() []uint32 {
	if x != nil {
		return x.Regs
	}
	return nil
}

func (x *CpuState) GetPc() uint32 {
	if x != nil {
		return x.Pc
	}
	return 0
}

func (x *CpuState) GetCycle() uint64 {
	if x != nil {
		return x.Cycle
	}
	return 0
}

// ⑥ ─ 调试
type BreakpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pc uint32 `protobuf:"varint,1,opt,name=pc,proto3" json:"pc,omitempty"`
}

func (x *BreakpointRequest) Reset() {
	*x = BreakpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreakpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreakpointRequest) ProtoMessage() {}

func (x *BreakpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreakpointRequest.ProtoReflect.Descriptor instead.
func (*BreakpointRequest) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{19}
}

func (x *BreakpointRequest) GetPc() uint32 {
	if x != nil {
		return x.Pc
	}
	return 0
}

// 空消息
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{20}
}

type TraceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cycle uint64   `protobuf:"varint,1,opt,name=cycle,proto3" json:"cycle,omitempty"`
	Pc    uint32   `protobuf:"varint,2,opt,name=pc,proto3" json:"pc,omitempty"`
	Instr uint32   `protobuf:"varint,3,opt,name=instr,proto3" json:"instr,omitempty"`
	Name  string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`         // e.g. "addi" / "VADD"
	Regs  []uint32 `protobuf:"varint,5,rep,packed,name=regs,proto3" json:"regs,omitempty"` // 可选：发生改变的寄存器
}

func (x *TraceEvent) Reset() {
	*x = TraceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceEvent) ProtoMessage() {}

func (x *TraceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_go_vemu_api_v1_vemu_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceEvent.ProtoReflect.Descriptor instead.
func (*TraceEvent) Descriptor() ([]byte, []int) {
	return file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP(), []int{21}
}

func (x *TraceEvent) GetCycle() uint64 {
	if x != nil {
		return x.Cycle
	}
	return 0
}

func (x *TraceEvent) GetPc() uint32 {
	if x != nil {
		return x.Pc
	}
	return 0
}

func (x *TraceEvent) GetInstr() uint32 {
	if x != nil {
		return x.Instr
	}
	return 0
}

func (x *TraceEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TraceEvent) GetRegs() []uint32 {
	if x != nil {
		return x.Regs
	}
	return nil
}

var File_go_vemu_api_v1_vemu_service_proto protoreflect.FileDescriptor

var file_go_vemu_api_v1_vemu_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x67, 0x6f, 0x2d, 0x76, 0x65, 0x6d, 0x75, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x76, 0x65, 0x6d, 0x75, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x22, 0x32, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x30, 0x0a, 0x13, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x65, 0x78, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x68, 0x65, 0x78, 0x54, 0x65,
	0x78, 0x74, 0x22, 0x3b, 0x0a, 0x11, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x25, 0x0a, 0x0b, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x0c, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73,
	0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x22,
	0x2b, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x6a, 0x0a, 0x0b,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x73, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x06,
	0x65, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x06, 0x65, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x22, 0x3c, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64,
	0x4d, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x25, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a,
	0x0f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3b, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x65, 0x6c, 0x65, 0x6d, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x12, 0x57, 0x72, 0x69, 0x74, 0x65, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0x32, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x04, 0x72, 0x65, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x70, 0x63, 0x22, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x73, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x73, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a,
	0x0d, 0x53, 0x65, 0x74, 0x43, 0x73, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x08, 0x43, 0x70, 0x75, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04,
	0x72, 0x65, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x70, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x42, 0x72,
	0x65, 0x61, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x70, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x70, 0x63, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x70, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x70, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x70, 0x63, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x65, 0x67, 0x73, 0x32, 0xaa, 0x08, 0x0a, 0x0b, 0x56,
	0x65, 0x6d, 0x75, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x12, 0x0e, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x12, 0x0e, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x0f, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x12, 0x1c, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3d, 0x0a, 0x0e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x42, 0x6c,
	0x6f, 0x62, 0x12, 0x1a, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61,
	0x64, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x33, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x14, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x13, 0x2e, 0x76, 0x65,
	0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x50, 0x61, 0x75, 0x73, 0x65, 0x12,
	0x0e, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x0f, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2f, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e,
	0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11,
	0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x70, 0x75, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x17, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x12, 0x18, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x76, 0x65,
	0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x0a,
	0x52, 0x65, 0x61, 0x64, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x2e, 0x76, 0x65, 0x6d,
	0x75, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x1b, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x30, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x73, 0x12, 0x0e, 0x2e, 0x76, 0x65,
	0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x76, 0x65,
	0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x52, 0x65, 0x67, 0x12, 0x16, 0x2e, 0x76,
	0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x43, 0x53, 0x52, 0x12,
	0x16, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x73, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x73, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x43, 0x53, 0x52, 0x12, 0x16, 0x2e, 0x76, 0x65, 0x6d,
	0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x73, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x0e, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x13, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x12, 0x3c, 0x0a, 0x0d, 0x53, 0x65, 0x74,
	0x42, 0x72, 0x65, 0x61, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x76, 0x65, 0x6d,
	0x75, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x0f, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x42, 0x72, 0x65, 0x61, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x76, 0x65, 0x6d,
	0x75, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x76, 0x65, 0x6d, 0x75, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x6f, 0x75, 0x72, 0x6f, 0x72, 0x67, 0x2f, 0x67, 0x6f,
	0x2d, 0x76, 0x65, 0x6d, 0x75, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_go_vemu_api_v1_vemu_service_proto_rawDescOnce sync.Once
	file_go_vemu_api_v1_vemu_service_proto_rawDescData = file_go_vemu_api_v1_vemu_service_proto_rawDesc
)

func file_go_vemu_api_v1_vemu_service_proto_rawDescGZIP() []byte {
	file_go_vemu_api_v1_vemu_service_proto_rawDescOnce.Do(func() {
		file_go_vemu_api_v1_vemu_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_vemu_api_v1_vemu_service_proto_rawDescData)
	})
	return file_go_vemu_api_v1_vemu_service_proto_rawDescData
}

var file_go_vemu_api_v1_vemu_service_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_go_vemu_api_v1_vemu_service_proto_goTypes = []interface{}{
	(*Status)(nil),              // 0: vemu.v1.Status
	(*LoadFirmwareRequest)(nil), // 1: vemu.v1.LoadFirmwareRequest
	(*LoadBinaryRequest)(nil),   // 2: vemu.v1.LoadBinaryRequest
	(*StepRequest)(nil),         // 3: vemu.v1.StepRequest
	(*StepResponse)(nil),        // 4: vemu.v1.StepResponse
	(*RunRequest)(nil),          // 5: vemu.v1.RunRequest
	(*RunResponse)(nil),         // 6: vemu.v1.RunResponse
	(*ReadMemRequest)(nil),      // 7: vemu.v1.ReadMemRequest
	(*ReadMemResponse)(nil),     // 8: vemu.v1.ReadMemResponse
	(*WriteMemRequest)(nil),     // 9: vemu.v1.WriteMemRequest
	(*ReadVectorRequest)(nil),   // 10: vemu.v1.ReadVectorRequest
	(*ReadVectorResponse)(nil),  // 11: vemu.v1.ReadVectorResponse
	(*WriteVectorRequest)(nil),  // 12: vemu.v1.WriteVectorRequest
	(*RegisterFile)(nil),        // 13: vemu.v1.RegisterFile
	(*SetRegRequest)(nil),       // 14: vemu.v1.SetRegRequest
	(*GetCsrRequest)(nil),       // 15: vemu.v1.GetCsrRequest
	(*GetCsrResponse)(nil),      // 16: vemu.v1.GetCsrResponse
	(*SetCsrRequest)(nil),       // 17: vemu.v1.SetCsrRequest
	(*CpuState)(nil),            // 18: vemu.v1.CpuState
	(*BreakpointRequest)(nil),   // 19: vemu.v1.BreakpointRequest
	(*Empty)(nil),               // 20: vemu.v1.Empty
	(*TraceEvent)(nil),          // 21: vemu.v1.TraceEvent
}
var file_go_vemu_api_v1_vemu_service_proto_depIdxs = []int32{
	20, // 0: vemu.v1.VemuService.Reset:input_type -> vemu.v1.Empty
	20, // 1: vemu.v1.VemuService.Shutdown:input_type -> vemu.v1.Empty
	1,  // 2: vemu.v1.VemuService.LoadFirmware:input_type -> vemu.v1.LoadFirmwareRequest
	2,  // 3: vemu.v1.VemuService.LoadBinaryBlob:input_type -> vemu.v1.LoadBinaryRequest
	3,  // 4: vemu.v1.VemuService.Step:input_type -> vemu.v1.StepRequest
	5,  // 5: vemu.v1.VemuService.Run:input_type -> vemu.v1.RunRequest
	20, // 6: vemu.v1.VemuService.Pause:input_type -> vemu.v1.Empty
	20, // 7: vemu.v1.VemuService.QueryState:input_type -> vemu.v1.Empty
	7,  // 8: vemu.v1.VemuService.ReadMemory:input_type -> vemu.v1.ReadMemRequest
	9,  // 9: vemu.v1.VemuService.WriteMemory:input_type -> vemu.v1.WriteMemRequest
	10, // 10: vemu.v1.VemuService.ReadVector:input_type -> vemu.v1.ReadVectorRequest
	12, // 11: vemu.v1.VemuService.WriteVector:input_type -> vemu.v1.WriteVectorRequest
	20, // 12: vemu.v1.VemuService.GetRegs:input_type -> vemu.v1.Empty
	14, // 13: vemu.v1.VemuService.SetReg:input_type -> vemu.v1.SetRegRequest
	15, // 14: vemu.v1.VemuService.GetCSR:input_type -> vemu.v1.GetCsrRequest
	17, // 15: vemu.v1.VemuService.SetCSR:input_type -> vemu.v1.SetCsrRequest
	20, // 16: vemu.v1.VemuService.TraceStream:input_type -> vemu.v1.Empty
	19, // 17: vemu.v1.VemuService.SetBreakpoint:input_type -> vemu.v1.BreakpointRequest
	19, // 18: vemu.v1.VemuService.ClearBreakpoint:input_type -> vemu.v1.BreakpointRequest
	0,  // 19: vemu.v1.VemuService.Reset:output_type -> vemu.v1.Status
	0,  // 20: vemu.v1.VemuService.Shutdown:output_type -> vemu.v1.Status
	0,  // 21: vemu.v1.VemuService.LoadFirmware:output_type -> vemu.v1.Status
	0,  // 22: vemu.v1.VemuService.LoadBinaryBlob:output_type -> vemu.v1.Status
	4,  // 23: vemu.v1.VemuService.Step:output_type -> vemu.v1.StepResponse
	6,  // 24: vemu.v1.VemuService.Run:output_type -> vemu.v1.RunResponse
	0,  // 25: vemu.v1.VemuService.Pause:output_type -> vemu.v1.Status
	18, // 26: vemu.v1.VemuService.QueryState:output_type -> vemu.v1.CpuState
	8,  // 27: vemu.v1.VemuService.ReadMemory:output_type -> vemu.v1.ReadMemResponse
	0,  // 28: vemu.v1.VemuService.WriteMemory:output_type -> vemu.v1.Status
	11, // 29: vemu.v1.VemuService.ReadVector:output_type -> vemu.v1.ReadVectorResponse
	0,  // 30: vemu.v1.VemuService.WriteVector:output_type -> vemu.v1.Status
	13, // 31: vemu.v1.VemuService.GetRegs:output_type -> vemu.v1.RegisterFile
	0,  // 32: vemu.v1.VemuService.SetReg:output_type -> vemu.v1.Status
	16, // 33: vemu.v1.VemuService.GetCSR:output_type -> vemu.v1.GetCsrResponse
	0,  // 34: vemu.v1.VemuService.SetCSR:output_type -> vemu.v1.Status
	21, // 35: vemu.v1.VemuService.TraceStream:output_type -> vemu.v1.TraceEvent
	0,  // 36: vemu.v1.VemuService.SetBreakpoint:output_type -> vemu.v1.Status
	0,  // 37: vemu.v1.VemuService.ClearBreakpoint:output_type -> vemu.v1.Status
	19, // [19:38] is the sub-list for method output_type
	0,  // [0:19] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_go_vemu_api_v1_vemu_service_proto_init() }
func file_go_vemu_api_v1_vemu_service_proto_init() {
	if File_go_vemu_api_v1_vemu_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadFirmwareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadBinaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StepRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StepResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteMemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadVectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadVectorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteVectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRegRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCsrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCsrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCsrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CpuState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreakpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_vemu_api_v1_vemu_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_vemu_api_v1_vemu_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_vemu_api_v1_vemu_service_proto_goTypes,
		DependencyIndexes: file_go_vemu_api_v1_vemu_service_proto_depIdxs,
		MessageInfos:      file_go_vemu_api_v1_vemu_service_proto_msgTypes,
	}.Build()
	File_go_vemu_api_v1_vemu_service_proto = out.File
	file_go_vemu_api_v1_vemu_service_proto_rawDesc = nil
	file_go_vemu_api_v1_vemu_service_proto_goTypes = nil
	file_go_vemu_api_v1_vemu_service_proto_depIdxs = nil
}
